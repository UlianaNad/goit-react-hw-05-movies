{"version":3,"file":"static/js/887.8cb636f0.chunk.js","mappings":"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","sources":["components/hooks/useHttp.jsx","components/pages/Homepage/Homepage.styled.js","components/pages/Homepage/HomePage.jsx","components/ImageNull.jsx","components/pages/MovieCard/MovieCard.styled.js","components/pages/MovieCard/MovieCard.jsx","components/servises/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useHttp = (fn, param) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fn(param)\n      .then(data => setData(data))\n      .catch(error => setError(error.message));\n  }, [param, fn]);\n\n  return [data, setData, { error }];\n};\n\nexport default useHttp;\n","import styled from \"styled-components\";\n\nexport const StyledUl = styled.ul`\n  padding: 10px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 16px;\n`;\nexport const StyledItem = styled.div`\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  transition: 0.3s;\n  padding: 5px;\n  border-radius: 10px;\n  height: 350px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  &:hover {\n    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n  }\n`;\nexport const StyledImage = styled.img`\n  object-fit: cover;\n  height: 250px;\n  width: 180px;\n  border-radius: 10px;\n  margin-bottom: 15px;\n`;\nexport const StyledMovieName = styled.p`\n  text-align: center;\n  color: teal;\n  font-weight: 600;\n  font-size: 20px;\n  margin: 5px;\n`;","import MovieCard from 'components/pages/MovieCard/MovieCard';\nimport useHttp from 'components/hooks/useHttp';\nimport { fetchTopMovies } from 'components/servises/api';\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { StyledUl } from './Homepage.styled';\n\n\nconst Movies = () => {\n  const [movies] = useHttp(fetchTopMovies);\n\n  const location = useLocation()\n  return (\n    <div>\n      <h1>Trending today</h1>\n      <StyledUl>\n        {movies?.map(movie => (\n          <li key={movie.id}>\n            <Link state={{from:location}} to={`movies/${movie.id.toString()}`}>\n              <MovieCard movie={movie} />\n            </Link>\n          </li>\n        ))}\n      </StyledUl>\n    </div>\n  );\n};\n\nexport default Movies;\n\n\n","import React from 'react'\n\nconst ImageNull = () => {\n  return (\n    <div>\n        Image is coming soon...\n    </div>\n  )\n}\n\nexport default ImageNull","import styled from \"styled-components\";\n\nexport const StyledItem = styled.div`\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  transition: 0.3s;\n  padding: 5px;\n  border-radius: 10px;\n  height: 350px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  &:hover {\n    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.5);\n  }\n`;\nexport const StyledImage = styled.img`\n  object-fit: cover;\n  height: 250px;\n  width: 180px;\n  border-radius: 10px;\n  margin-bottom: 15px;\n`;\nexport const StyledMovieName = styled.p`\n  text-align: center;\n  color: teal;\n  font-weight: 600;\n  font-size: 20px;\n  margin: 5px;\n`;\n","import React from 'react';\nimport ImageNull from '../../ImageNull';\nimport { StyledImage, StyledItem, StyledMovieName } from './MovieCard.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({ movie }) => {\n  return (\n    <StyledItem>\n      <StyledMovieName>{movie.original_title}</StyledMovieName>\n      {movie.poster_path !== null ? (\n        <StyledImage\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.tagline}\n        />\n      ) : (\n        <ImageNull />\n      )}\n    </StyledItem>\n  );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'fd414160c84010c37fd4e795cc45de31';\nexport const fetchTopMovies = async () =>{\n    const {data} = await axios.get(`trending/movie/day?api_key=${API_KEY}`)\n    return data.results;\n}\n\nexport const fetchMovieById = async(id) =>{\n    const {data} = await axios.get(`movie/${id}?api_key=${API_KEY}`)\n    return data;\n}\n\nexport const fetchCastByMovieId = async(id) =>{\n    const {data} = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`)\n    return data.cast;\n}\n\nexport const fetchReviewsByMovieId = async(id) =>{\n    const {data} = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`)\n    return data.results;\n}\n\nexport const fetchMovieBySearch = async(query) => {\n    const {data} = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`)\n    return data.results\n}"],"names":["fn","param","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","error","setError","useEffect","then","catch","message","StyledUl","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_useHttp","useHttp","fetchTopMovies","movies","location","useLocation","_jsxs","children","_jsx","map","movie","Link","state","from","to","concat","id","toString","MovieCard","StyledItem","StyledImage","StyledMovieName","_ref","original_title","poster_path","src","alt","tagline","ImageNull","axios","API_KEY","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","_context","prev","next","sent","abrupt","results","stop","apply","arguments","fetchMovieById","_ref2","_callee2","_yield$axios$get2","_context2","_x","fetchCastByMovieId","_ref3","_callee3","_yield$axios$get3","_context3","cast","_x2","fetchReviewsByMovieId","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieBySearch","_ref5","_callee5","query","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}