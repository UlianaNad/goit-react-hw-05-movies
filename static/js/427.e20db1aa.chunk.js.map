{"version":3,"file":"static/js/427.e20db1aa.chunk.js","mappings":"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","sources":["components/hooks/useHttp.jsx","components/ImageNull.jsx","components/pages/MovieCard/MovieCard.styled.js","components/pages/MovieCard/MovieCard.jsx","components/pages/SearchMovie/SearchMovie.styled..js","components/pages/SearchMovie/SearchMovies.jsx","components/servises/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useHttp = (fn, param) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fn(param)\n      .then(data => setData(data))\n      .catch(error => setError(error.message));\n  }, [param, fn]);\n\n  return [data, setData, { error }];\n};\n\nexport default useHttp;\n","import React from 'react'\n\nconst ImageNull = () => {\n  return (\n    <div>\n        Image is coming soon...\n    </div>\n  )\n}\n\nexport default ImageNull","import styled from \"styled-components\";\n\nexport const StyledItem = styled.div`\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  transition: 0.3s;\n  padding: 5px;\n  border-radius: 10px;\n  height: 350px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  &:hover {\n    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.5);\n  }\n`;\nexport const StyledImage = styled.img`\n  object-fit: cover;\n  height: 250px;\n  width: 180px;\n  border-radius: 10px;\n  margin-bottom: 15px;\n`;\nexport const StyledMovieName = styled.p`\n  text-align: center;\n  color: teal;\n  font-weight: 600;\n  font-size: 20px;\n  margin: 5px;\n`;\n","import React from 'react';\nimport ImageNull from '../../ImageNull';\nimport { StyledImage, StyledItem, StyledMovieName } from './MovieCard.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({ movie }) => {\n  return (\n    <StyledItem>\n      <StyledMovieName>{movie.original_title}</StyledMovieName>\n      {movie.poster_path !== null ? (\n        <StyledImage\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.tagline}\n        />\n      ) : (\n        <ImageNull />\n      )}\n    </StyledItem>\n  );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n};","import styled from \"styled-components\";\n\nexport const StyledUl = styled.ul`\n  padding: 10px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 16px;\n`;\n\nexport const StyledInput = styled.input`\n  width: 250px;\n    height: 40px;\n    border-width: 1px;\n    border-style: solid;\n    border-color: rgb(225, 225, 225);\n    padding: 8px 10px;\n    outline: none;\n    color: rgb(87, 75, 65);\n    display: block;\n    border-radius: 5px;\n\n  &focus,\n  &:hover {\n    border-color: rgba(0, 161, 82, 0.5);\n    box-shadow: 0 0 5px 1px #006363;\n  }\n`;\nexport const StyledButton = styled.button`\n  display: inline-block;\n  padding: 9px 20px;\n  font-size: 15px;\n  font-weight: bold;\n  line-height: 1.42857143;\n  text-align: center;\n  white-space: nowrap;\n  cursor: pointer;\n  border-radius: 4px;\n  color: #fff;\n  border: 0;\n  background-color: #008888;\n  width: 150px;\n  position: relative;\n  overflow: hidden;\n  transition: 0.4s;\n  text-transform: uppercase;\n\n  &:hover {\n    background-color: #006363;\n  }\n  @media (max-width: 425px) {\n    min-width: 47%;\n    font-size: 12px;\n    padding: 5px 10px;\n    margin-right: 0;\n  }\n`;\nexport const WrapSearch = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 15px;\n    margin-top: 10px;\n`;","import MovieCard from 'components/pages/MovieCard/MovieCard';\nimport useHttp from 'components/hooks/useHttp';\nimport { fetchMovieBySearch } from 'components/servises/api';\nimport React, { useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { StyledButton, StyledInput, StyledUl, WrapSearch } from './SearchMovie.styled.';\n\nfunction SearchMovie() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [value, setValue] = useState('')\n\n  const query = searchParams.get('query') || '';\n\n  const [movies] = useHttp(fetchMovieBySearch, query);\n\n  const location = useLocation()\n\n  const filteredMovies = movies?.filter(movie =>\n    movie.original_title.toLowerCase().includes(query.toLowerCase())\n  );\n\n  const handleSetSearchQuery = () =>{\n    setSearchParams(value ? {query: value} : {})\n  }\n  return (\n    <div>\n      <WrapSearch>\n        <StyledInput\n          value={value}\n          onChange={e =>\n            setValue(e.target.value)\n          }\n          type=\"text\"\n          placeholder=\"Enter movie name\"\n        />\n        <StyledButton onClick={handleSetSearchQuery}>Search</StyledButton>\n      </WrapSearch>\n      <StyledUl>\n        {filteredMovies?.map(movie => (\n          <li key={movie.id}>\n            <Link state={{from:location}} to={movie.id.toString()}>\n              <MovieCard movie={movie} />\n            </Link>\n          </li>\n        ))}\n      </StyledUl>\n    </div>\n  );\n}\n\nexport default SearchMovie;\n\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'fd414160c84010c37fd4e795cc45de31';\nexport const fetchTopMovies = async () =>{\n    const {data} = await axios.get(`trending/movie/day?api_key=${API_KEY}`)\n    return data.results;\n}\n\nexport const fetchMovieById = async(id) =>{\n    const {data} = await axios.get(`movie/${id}?api_key=${API_KEY}`)\n    return data;\n}\n\nexport const fetchCastByMovieId = async(id) =>{\n    const {data} = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`)\n    return data.cast;\n}\n\nexport const fetchReviewsByMovieId = async(id) =>{\n    const {data} = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`)\n    return data.results;\n}\n\nexport const fetchMovieBySearch = async(query) => {\n    const {data} = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`)\n    return data.results\n}"],"names":["fn","param","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","error","setError","useEffect","then","catch","message","_jsx","children","StyledItem","styled","_templateObject","_taggedTemplateLiteral","StyledImage","_templateObject2","StyledMovieName","_templateObject3","_ref","movie","_jsxs","original_title","poster_path","src","concat","alt","tagline","ImageNull","StyledUl","StyledInput","StyledButton","WrapSearch","_templateObject4","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","value","setValue","query","get","_useHttp","useHttp","fetchMovieBySearch","movies","location","useLocation","filteredMovies","filter","toLowerCase","includes","onChange","e","target","type","placeholder","onClick","map","Link","state","from","to","id","toString","MovieCard","axios","API_KEY","fetchTopMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","_context","prev","next","sent","abrupt","results","stop","apply","arguments","fetchMovieById","_ref2","_callee2","_yield$axios$get2","_context2","_x","fetchCastByMovieId","_ref3","_callee3","_yield$axios$get3","_context3","cast","_x2","fetchReviewsByMovieId","_ref4","_callee4","_yield$axios$get4","_context4","_x3","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}